/**
 * Resource Catalog Management
 * ## TMF API Reference: TMF634 - Resource Catalog Management  ### Release : 19.0 - June 2019  Resource Catalog API is one of Catalog Management API Family. Resource Catalog API goal is to provide a catalog of resources.   ### Operations Resource Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { FeatureSpecificationCharacteristicRelationship } from './featureSpecificationCharacteristicRelationship';
import { FeatureSpecificationCharacteristicValue } from './featureSpecificationCharacteristicValue';
import { TimePeriod } from './timePeriod';


/**
 * Configuration feature characteristic specification.
 */
export interface FeatureSpecificationCharacteristic { 
    /**
     * True is the feature is configurable.
     */
    configurable?: boolean;
    /**
     * An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a feature.
     */
    extensible?: boolean;
    /**
     * An indicator that specifies if a value is unique for the specification.
     */
    isUnique?: boolean;
    /**
     * The maximum number of instances a CharacteristicValue can take on.
     */
    maxCardinality?: number;
    /**
     * The minimum number of instances a CharacteristicValue can take on.
     */
    minCardinality?: number;
    /**
     * This is the name for the feature charateristic.
     */
    name: string;
    /**
     * A rule or principle represented in regular expression used to derive the value of a characteristic value.
     */
    regex?: string;
    /**
     * A kind of value that the characteristic can take on.
     */
    valueType?: string;
    /**
     * An aggregation, migration, substitution, dependency or exclusivity relationship between/among feature characteristics.
     */
    featureSpecCharRelationship?: Array<FeatureSpecificationCharacteristicRelationship>;
    /**
     * Used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a FeatureCharacteristic object.
     */
    featureSpecCharacteristicValue?: Array<FeatureSpecificationCharacteristicValue>;
    /**
     * The period of time for which a characteristic is applicable.
     */
    validFor?: TimePeriod;
    /**
     * When sub-classing, this defines the super-class
     */
    baseType?: string;
    /**
     * A URI to a JSON-Schema file that defines additional attributes and relationships
     */
    schemaLocation?: string;
    /**
     * When sub-classing, this defines the sub-class entity name
     */
    type?: string;
    /**
     * This (optional) field provides a link to the schema describing the value type.
     */
    valueSchemaLocation?: string;
}
