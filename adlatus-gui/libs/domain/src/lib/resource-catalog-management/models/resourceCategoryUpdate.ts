/**
 * Resource Catalog Management
 * ## TMF API Reference: TMF634 - Resource Catalog Management  ### Release : 19.0 - June 2019  Resource Catalog API is one of Catalog Management API Family. Resource Catalog API goal is to provide a catalog of resources.   ### Operations Resource Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { RelatedParty } from './relatedParty';
import { ResourceCandidateRef } from './resourceCandidateRef';
import { ResourceCategoryRef } from './resourceCategoryRef';
import { TimePeriod } from './timePeriod';


/**
 * The (resource) category resource is used to group resource candidates in logical containers. Categories can contain other categories. Skipped properties: id,href
 */
export interface ResourceCategoryUpdate { 
    /**
     * Description of the category
     */
    description?: string;
    /**
     * If true, this Boolean indicates that the category is a root of categories
     */
    isRoot?: boolean;
    /**
     * Date and time of the last update
     */
    lastUpdate?: Date;
    /**
     * Used to indicate the current lifecycle status
     */
    lifecycleStatus?: string;
    /**
     * Name of the category
     */
    name?: string;
    /**
     * Unique identifier of the parent category
     */
    parentId?: string;
    /**
     * Category version
     */
    version?: string;
    /**
     * The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other (sub-)categories and/or product offerings.
     */
    category?: Array<ResourceCategoryRef>;
    /**
     * List of parties involved in this category
     */
    relatedParty?: Array<RelatedParty>;
    /**
     * List of resource candidates accessible via this category
     */
    resourceCandidate?: Array<ResourceCandidateRef>;
    /**
     * The period for which the category is valid
     */
    validFor?: TimePeriod;
    /**
     * When sub-classing, this defines the super-class
     */
    baseType?: string;
    /**
     * A URI to a JSON-Schema file that defines additional attributes and relationships
     */
    schemaLocation?: string;
    /**
     * When sub-classing, this defines the sub-class entity name
     */
    type?: string;
}
