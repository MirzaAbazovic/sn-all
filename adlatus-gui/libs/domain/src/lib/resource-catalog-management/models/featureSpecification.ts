/**
 * Resource Catalog Management
 * ## TMF API Reference: TMF634 - Resource Catalog Management  ### Release : 19.0 - June 2019  Resource Catalog API is one of Catalog Management API Family. Resource Catalog API goal is to provide a catalog of resources.   ### Operations Resource Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ConstraintRef } from './constraintRef';
import { FeatureSpecificationCharacteristic } from './featureSpecificationCharacteristic';
import { FeatureSpecificationRelationship } from './featureSpecificationRelationship';
import { TimePeriod } from './timePeriod';


/**
 * Specification for applicable configuration features for a resource specification.
 */
export interface FeatureSpecification { 
    /**
     * Identifier of the feature specification. Must be locally unique within the containing resource specification, thus allowing direct access to the feature spec.
     */
    id?: string;
    /**
     * A flag indicating if this is a feature group (true) or not (false)
     */
    isBundle?: boolean;
    /**
     * A flag indicating if the feature is enabled (true) or not (false)
     */
    isEnabled?: boolean;
    /**
     * Unique name given to the feature specification
     */
    name?: string;
    /**
     * Version of the feature specification
     */
    version?: string;
    /**
     * This is a list of feature constraints
     */
    constraint?: Array<ConstraintRef>;
    /**
     * This is a list of characteristics for a particular feature
     */
    featureSpecCharacteristic?: Array<FeatureSpecificationCharacteristic>;
    /**
     * A dependency, exclusivity or aggratation relationship between/among feature specifications.
     */
    featureSpecRelationship?: Array<FeatureSpecificationRelationship>;
    /**
     * The period for which this feature specification is valid
     */
    validFor?: TimePeriod;
    /**
     * When sub-classing, this defines the super-class
     */
    baseType?: string;
    /**
     * A URI to a JSON-Schema file that defines additional attributes and relationships
     */
    schemaLocation?: string;
    /**
     * When sub-classing, this defines the sub-class entity name
     */
    type?: string;
}
