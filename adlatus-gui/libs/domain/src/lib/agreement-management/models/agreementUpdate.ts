/**
 * Agreement Management
 * This is Swagger UI environment generated for the TMF Agreement Management specification
 *
 * OpenAPI spec version: 4.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AgreementAuthorization } from './agreementAuthorization';
import { AgreementItem } from './agreementItem';
import { AgreementRef } from './agreementRef';
import { AgreementSpecificationRef } from './agreementSpecificationRef';
import { Characteristic } from './characteristic';
import { RelatedParty } from './relatedParty';
import { TimePeriod } from './timePeriod';


/**
 * An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications. Skipped properties: id,href,completionDate
 */
export interface AgreementUpdate {
    /**
     * The type of the agreement. For example commercial
     */
    agreementType: string;
    /**
     * Narrative that explains the agreement and details about the it , such as why the agreement is taking place.
     */
    description?: string;
    /**
     * A reference number assigned to an Agreement that follows a prescribed numbering system.
     */
    documentNumber?: number;
    /**
     * Date at which the agreement was initialized
     */
    initialDate?: Date;
    /**
     * A human-readable name for the agreement
     */
    name: string;
    /**
     * An overview and goals of the Agreement
     */
    statementOfIntent?: string;
    /**
     * The current status of the agreement. Typical values are: in process, approved and rejected
     */
    status?: string;
    /**
     * A string identifying the version of the agreement
     */
    version?: string;
    agreementAuthorization?: Array<AgreementAuthorization>;
    agreementItem: Array<AgreementItem>;
    /**
     * The time period during which the Agreement is in effect.
     */
    agreementPeriod?: TimePeriod;
    agreementSpecification?: AgreementSpecificationRef;
    associatedAgreement?: Array<AgreementRef>;
    characteristic?: Array<Characteristic>;
    engagedParty: Array<RelatedParty>;
    /**
     * When sub-classing, this defines the super-class
     */
    baseType?: string;
    /**
     * A URI to a JSON-Schema file that defines additional attributes and relationships
     */
    schemaLocation?: string;
    /**
     * When sub-classing, this defines the sub-class entity name
     */
    type?: string;
}
