--
-- SQL-Script, das vor der Migration der Sperrverwaltung ausgefuehrt
-- werden muss.
--

CREATE TABLE T_LOCK (
       ID NUMBER(10) NOT NULL
     , LOCK_MODE_REF_ID NUMBER(10) NOT NULL
     , LOCK_STATE_REF_ID NUMBER(10) NOT NULL
     , CREATED_AT DATE NOT NULL
     , CREATED_FROM VARCHAR2(20) NOT NULL
     , CUSTOMER_NO NUMBER(10) NOT NULL
     , DEB_ID VARCHAR2(10)
     , TAIFUN_ORDER__NO NUMBER(10)
     , AUFTRAG_ID NUMBER(10)
     , LOCK_REASON_REF_ID NUMBER(10)
     , LOCK_REASON_TEXT VARCHAR2(255)
     , CPS_TX_ID NUMBER(10)
     , MANUAL_PROVISIONING CHAR(1)
     , PARENT_LOCK_ID NUMBER(10)
);
COMMENT ON TABLE T_LOCK IS 'Tabelle, um Sperrvorgaenge fuer einzelne Auftraege zu protokollieren';
COMMENT ON COLUMN T_LOCK.MANUAL_PROVISIONING IS 'Flag ist gesetzt, wenn die Sperre von den Abteilungen manuell ausgefuehrt werden muss';
COMMENT ON COLUMN T_LOCK.CPS_TX_ID IS 'Referenz auf die CPS-Transaction, die den Sperrvorgang durchfuehrt';
commit;

ALTER TABLE T_LOCK ADD CONSTRAINT PK_T_LOCK PRIMARY KEY (ID);
commit;

CREATE TABLE T_LOCK_DETAIL (
      ID NUMBER(10) NOT NULL
    , LOCK_ID NUMBER(10) NOT NULL
    , ABTEILUNG_ID NUMBER(10) NOT NULL
    , EXECUTED_AT DATE
    , EXECUTED_FROM VARCHAR2(20)
);

ALTER TABLE T_LOCK_DETAIL ADD CONSTRAINT PK_T_LOCK_DETAIL PRIMARY KEY (ID);

-- ForeignKey von T_LOCK.AUFTRAG_ID auf T_AUFTRAG 
CREATE INDEX IX_FK_LOCK_2_AUFTRAG ON T_LOCK (AUFTRAG_ID) TABLESPACE "I_HURRICAN";
ALTER TABLE T_LOCK
  ADD CONSTRAINT FK_LOCK_2_AUFTRAG
      FOREIGN KEY (AUFTRAG_ID)
      REFERENCES T_AUFTRAG (ID);
-- ForeignKey von T_LOCK.LOCK_STATE_REF_ID auf T_REFERENCE 
CREATE INDEX IX_FK_LOCKSTATE_2_REF ON T_LOCK (LOCK_STATE_REF_ID) TABLESPACE "I_HURRICAN";
ALTER TABLE T_LOCK
  ADD CONSTRAINT FK_LOCKSTATE_2_REF
      FOREIGN KEY (LOCK_STATE_REF_ID)
      REFERENCES T_REFERENCE (ID);
-- ForeignKey von T_LOCK.LOCK_MODE_REF_ID auf T_REFERENCE 
CREATE INDEX IX_FK_LOCKMODE_2_REF ON T_LOCK (LOCK_MODE_REF_ID) TABLESPACE "I_HURRICAN";
ALTER TABLE T_LOCK
  ADD CONSTRAINT FK_LOCKMODE_2_REF
      FOREIGN KEY (LOCK_MODE_REF_ID)
      REFERENCES T_REFERENCE (ID);
-- ForeignKey von T_LOCK.LOCK_REASON_REF_ID auf T_REFERENCE 
CREATE INDEX IX_FK_LOCKREASON_2_REF ON T_LOCK (LOCK_REASON_REF_ID) TABLESPACE "I_HURRICAN";
ALTER TABLE T_LOCK
  ADD CONSTRAINT FK_LOCKREASON_2_REF
      FOREIGN KEY (LOCK_REASON_REF_ID)
      REFERENCES T_REFERENCE (ID);
-- ForeignKey von T_LOCK.CPS_TX_ID auf T_CPS_TX
CREATE INDEX IX_FK_LOCK_2_CPS ON T_LOCK (CPS_TX_ID) TABLESPACE "I_HURRICAN";
ALTER TABLE T_LOCK
  ADD CONSTRAINT FK_LOCK_2_CPS
      FOREIGN KEY (CPS_TX_ID)
      REFERENCES T_CPS_TX (ID);
commit;      

-- ForeignKey von T_LOCK_DETAIL.LOCK_ID auf T_LOCK
CREATE INDEX IX_FK_LOCKDET_2_LOCK ON T_LOCK_DETAIL (LOCK_ID) TABLESPACE "I_HURRICAN";
ALTER TABLE T_LOCK_DETAIL
  ADD CONSTRAINT FK_LOCKDET_2_LOCK
      FOREIGN KEY (LOCK_ID)
      REFERENCES T_LOCK (ID);
commit;      
      

create SEQUENCE S_T_LOCK_0 start with 1;
grant select on S_T_LOCK_0 to public;

create SEQUENCE S_T_LOCK_DETAIL_0 start with 1;
grant select on S_T_LOCK_DETAIL_0 to public;

create trigger TRBI_LOCK BEFORE INSERT on T_LOCK
for each row
when (new.ID is null)
begin
 select S_T_LOCK_0.nextval into :new.ID from dual;
end;
/
commit;

create trigger TRBI_LOCK_DETAIL BEFORE INSERT on T_LOCK_DETAIL
for each row
when (new.ID is null)
begin
 select S_T_LOCK_DETAIL_0.nextval into :new.ID from dual;
end;
/
commit;


-- DB-Grants definieren
grant select, insert, update on T_LOCK to R_HURRICAN_USER;
grant select on T_LOCK to R_HURRICAN_READ_ONLY;
grant select, insert, update on T_LOCK_DETAIL to R_HURRICAN_USER;
grant select on T_LOCK_DETAIL to R_HURRICAN_READ_ONLY;
commit;
