--
-- 1. Sequences and Tables for Subrack
-- 2. Data for Subrack
-- 3. Trigger to keep Subrack.rackId and Baugruppe.rackId in sync
-- 4. Grants for new tables
--

ALTER TABLE T_HW_BAUGRUPPEN_TYP
 MODIFY(HW_TYPE_NAME VARCHAR2(32 BYTE));


CREATE SEQUENCE S_T_HW_SUBRACK_0
START WITH 1
INCREMENT BY 1
MINVALUE 1
NOCACHE 
NOCYCLE 
NOORDER;

CREATE TABLE T_HW_SUBRACK
(
  ID              NUMBER(10)                    NOT NULL,
  SUBRACK_TYP_ID  NUMBER(10)                    NOT NULL,
  RACK_ID         NUMBER(10)                    NOT NULL,
  MOD_NUMBER      VARCHAR2(16 BYTE)             NOT NULL
);

ALTER TABLE T_HW_SUBRACK ADD (
  CONSTRAINT PK_HW_SUBRACK
 PRIMARY KEY
 (ID));

ALTER TABLE T_HW_SUBRACK
 ADD CONSTRAINT FK_HWSUBRACK_RACK
 FOREIGN KEY (RACK_ID) 
 REFERENCES T_HW_RACK (ID)
    DEFERRABLE INITIALLY IMMEDIATE;


CREATE SEQUENCE S_T_HW_SUBRACK_TYP_0
START WITH 1
INCREMENT BY 1
MINVALUE 1
NOCACHE 
NOCYCLE 
NOORDER;

CREATE TABLE T_HW_SUBRACK_TYP
(
  ID           NUMBER(10)                       NOT NULL,
  NAME         VARCHAR2(32)                     NOT NULL,
  DESCRIPTION  VARCHAR2(255),
  RACK_TYP     VARCHAR2(16)                     NOT NULL,
  BG_COUNT     NUMBER(10)                       NOT NULL,
  PORT_COUNT   NUMBER(10)                       NOT NULL,
  HW_TYPE_NAME VARCHAR2(32 BYTE)                NOT NULL
);

ALTER TABLE T_HW_SUBRACK_TYP ADD (
  CONSTRAINT PK_HW_SUBRACK_TYP
 PRIMARY KEY
 (ID));


ALTER TABLE T_HW_SUBRACK
 ADD CONSTRAINT FK_HWSUBRACK_TYP 
 FOREIGN KEY (SUBRACK_TYP_ID) 
 REFERENCES T_HW_SUBRACK_TYP (ID)
    DEFERRABLE INITIALLY IMMEDIATE;


ALTER TABLE T_HW_BAUGRUPPE
 ADD (SUBRACK_ID  NUMBER(10));

ALTER TABLE T_HW_BAUGRUPPE
 ADD CONSTRAINT FK_HWBG_SUBRACK 
 FOREIGN KEY (SUBRACK_ID) 
 REFERENCES T_HW_SUBRACK (ID)
    DEFERRABLE INITIALLY IMMEDIATE;



COMMENT ON COLUMN T_HW_BAUGRUPPEN_TYP.HW_TYPE_NAME IS 'Used for determining the regexp to use. Same as in T_HW_SUBRACK_TYP';

COMMENT ON COLUMN T_HW_SUBRACK_TYP.BG_COUNT IS 'Die maximale Anzahl Baugruppen, die in diesem Subrack moeglich ist';
COMMENT ON COLUMN T_HW_SUBRACK_TYP.PORT_COUNT IS 'Die maximale Anzahl Ports pro Baugruppe, in diesem Subrack moeglich ist';

COMMENT ON COLUMN T_HW_SUBRACK.MOD_NUMBER IS 'Assembly information (e.g. Alcatel: Rack-Subrack)';
COMMENT ON COLUMN T_HW_SUBRACK_TYP.HW_TYPE_NAME IS 'Used for determining the regexp to use. Same as in T_HW_BAUGRUPPEN_TYP';


INSERT INTO T_HW_SUBRACK_TYP (ID, NAME, DESCRIPTION, RACK_TYP, BG_COUNT, PORT_COUNT, HW_TYPE_NAME)
 VALUES (S_T_HW_SUBRACK_TYP_0.NEXTVAL, 'NFXS-A', '', 'DSLAM', 48, 16, 'XDSL_MUC');
INSERT INTO T_HW_SUBRACK_TYP (ID, NAME, DESCRIPTION, RACK_TYP, BG_COUNT, PORT_COUNT, HW_TYPE_NAME)
 VALUES (S_T_HW_SUBRACK_TYP_0.NEXTVAL, 'NFXS-B', '', 'DSLAM', 48, 8, 'XDSL_MUC');
INSERT INTO T_HW_SUBRACK_TYP (ID, NAME, DESCRIPTION, RACK_TYP, BG_COUNT, PORT_COUNT, HW_TYPE_NAME)
 VALUES (S_T_HW_SUBRACK_TYP_0.NEXTVAL, 'ALTS-F', '', 'DSLAM', 12, 16, 'XDSL_MUC');
INSERT INTO T_HW_SUBRACK_TYP (ID, NAME, DESCRIPTION, RACK_TYP, BG_COUNT, PORT_COUNT, HW_TYPE_NAME)
 VALUES (S_T_HW_SUBRACK_TYP_0.NEXTVAL, 'ALTS-M', '', 'DSLAM', 24, 16, 'XDSL_MUC');
INSERT INTO T_HW_SUBRACK_TYP (ID, NAME, DESCRIPTION, RACK_TYP, BG_COUNT, PORT_COUNT, HW_TYPE_NAME)
 VALUES (S_T_HW_SUBRACK_TYP_0.NEXTVAL, 'UMRAM-A', '', 'DSLAM', 24, 5, 'XDSL_MUC');
INSERT INTO T_HW_SUBRACK_TYP (ID, NAME, DESCRIPTION, RACK_TYP, BG_COUNT, PORT_COUNT, HW_TYPE_NAME)
 VALUES (S_T_HW_SUBRACK_TYP_0.NEXTVAL, 'ALTS-T', '', 'DSLAM', 48, 16, 'XDSL_MUC');

 
INSERT INTO T_CFG_REG_EXP (
   ID, REF_ID, REF_NAME, 
   REF_CLASS, REQUESTED_INFO, REGULAR_EXP, 
   MATCH_GROUP, DESCRIPTION) 
VALUES (10, null, 'XDSL_MUC',
	'de.augustakom.hurrican.model.cc.hardware.HWSubrackTyp', 'SUBRACK_MOD_NUMBER', '^\d-\d$',
    0, 'Alcatel DSLAM Subrack Modul-Nummer muss dem Schema ZAHL-ZAHL entsprechen (z.B. 1-1)');

	
CREATE OR REPLACE TRIGGER TRGAC_T_HW_BAUGRUPPE
   AFTER INSERT OR UPDATE
   ON T_HW_BAUGRUPPE
DECLARE
   iRACK_ID   NUMBER (10) := NULL;
BEGIN

   SELECT   a.RACK_ID
     INTO   iRACK_ID
     FROM   T_HW_SUBRACK C,
            T_HW_RACK B,
            T_HW_BAUGRUPPE A
    WHERE       ROWNUM = 1
            AND A.RACK_ID <> C.RACK_ID
            AND A.SUBRACK_ID = C.ID
            AND A.RACK_ID = B.ID;

   raise_application_error (
      -20000,
      'TRGAC_T_HW_BAUGRUPPE - t_hw_rack id does not match to id in subrack: '
      || iRACK_ID
      || '-'
      || SQLERRM
   );
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
END;
/

CREATE OR REPLACE TRIGGER TRGAC_T_HW_SUBRACK
   AFTER INSERT OR UPDATE
   ON T_HW_SUBRACK
DECLARE
   iRACK_ID   NUMBER (10) := NULL;
BEGIN

   SELECT   a.RACK_ID
     INTO   iRACK_ID
     FROM   T_HW_SUBRACK C,
            T_HW_RACK B,
            T_HW_BAUGRUPPE A
    WHERE       ROWNUM = 1
            AND A.RACK_ID <> C.RACK_ID
            AND A.SUBRACK_ID = C.ID
            AND A.RACK_ID = B.ID;

   raise_application_error (
      -20000,
      'TRGAC_T_HW_SUBRACK - t_hw_rack id does not match to id in subrack: '
      || iRACK_ID
      || '-'
      || SQLERRM
   );
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      NULL;
END;
/

GRANT SELECT, INSERT, UPDATE ON T_HW_SUBRACK TO R_HURRICAN_USER;
GRANT SELECT, INSERT, UPDATE ON T_HW_SUBRACK_TYP TO R_HURRICAN_USER;

GRANT SELECT ON S_T_HW_SUBRACK_0 TO PUBLIC;
GRANT SELECT ON S_T_HW_SUBRACK_TYP_0 TO PUBLIC;
