--
-- SQL-Script, um die neue Datenstruktur zu erzeugen
--

alter table T_PRODUKT ADD COLUMN IS_COMBI_PRODUKT TINYINT(1) AFTER CHECK_CHILD;
alter table T_PRODUKT ADD COLUMN BA_RUECKLAEUFER TINYINT(1) AFTER VERTEILUNG_DURCH;
alter table T_PRODUKT ADD COLUMN MAX_DN_COUNT INTEGER(9) AFTER BRAUCHT_DN;
alter table T_PRODUKT ADD COLUMN DN_BLOCK TINYINT(1) AFTER MAX_DN_COUNT;
alter table T_PRODUKT ADD COLUMN DN_TYP INTEGER(10) AFTER DN_BLOCK;
alter table T_PRODUKT ADD COLUMN PROD_NAME_PATTERN VARCHAR(255) AFTER ANSCHLUSSART;

-- Aenderungen an T_VERLAUF
alter table T_VERLAUF ADD COLUMN OBSERVE_PROCESS TINYINT(1) AFTER VERSCHOBEN;

-- Aenderungen an T_ENDSTELLE
alter table T_ENDSTELLE ADD COLUMN RANGIER_ID_ADDITIONAL INTEGER(9) AFTER RANGIER_ID;
ALTER TABLE T_ENDSTELLE
  ADD CONSTRAINT FK_ES_RADD_2_RANG
      FOREIGN KEY (RANGIER_ID_ADDITIONAL)
      REFERENCES T_RANGIERUNG (RANGIER_ID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE;

-- Aenderungen an T_PRODUKT_2_PHYSIKTYP
alter table T_PRODUKT_2_PHYSIKTYP add column PHYSIKTYP_ADDITIONAL INTEGER(9) AFTER PHYSIKTYP;
ALTER TABLE T_PRODUKT_2_PHYSIKTYP
  ADD CONSTRAINT FK_P2PTADD_2_PHYSIKTYP
      FOREIGN KEY (PHYSIKTYP_ADDITIONAL)
      REFERENCES T_PHYSIKTYP (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;

-- Produkt-Leistungskonfiguration
CREATE TABLE T_PROD_2_TECH_LS (
       PROD_ID INTEGER(9) NOT NULL
     , TECH_LS_ID INTEGER(9) NOT NULL
     , TECH_LS_DEPENDENCY INTEGER(9)
     , IS_DEFAULT TINYINT(1)
     , PRIMARY KEY (PROD_ID, TECH_LS_ID, TECH_LS_DEPENDENCY)
)ENGINE=InnoDB;
ALTER TABLE T_PROD_2_TECH_LS
  ADD CONSTRAINT FK_P2TLSDEP_2_TLS
      FOREIGN KEY (TECH_LS_DEPENDENCY)
      REFERENCES T_TECH_LEISTUNG (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
ALTER TABLE T_PROD_2_TECH_LS
  ADD CONSTRAINT FK_P2TLS_2_TLS
      FOREIGN KEY (TECH_LS_ID)
      REFERENCES T_TECH_LEISTUNG (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
ALTER TABLE T_PROD_2_TECH_LS
  ADD CONSTRAINT FK_P2TLS_2_PROD
      FOREIGN KEY (PROD_ID)
      REFERENCES T_PRODUKT (PROD_ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
      
-- Command-Konfiguration zu den techn. Leistungen
ALTER TABLE T_SERVICE_COMMANDS CHANGE TYPE TYPE VARCHAR(15);
CREATE TABLE T_TECH_LS_2_COMMAND (
       ID INTEGER(9) NOT NULL AUTO_INCREMENT
     , TECH_LS_ID INTEGER(9) NOT NULL
     , COMMAND_ID INTEGER(9) NOT NULL
     , ORDER_NO INTEGER(9)
     , PRIMARY KEY (ID)
)ENGINE=InnoDB;
ALTER TABLE T_TECH_LS_2_COMMAND
  ADD CONSTRAINT UQ_TECHLS2CMD
      UNIQUE (TECH_LS_ID, COMMAND_ID);
ALTER TABLE T_TECH_LS_2_COMMAND
  ADD CONSTRAINT FK_TLS2CMD_2_TECHLS
      FOREIGN KEY (TECH_LS_ID)
      REFERENCES T_TECH_LEISTUNG (ID);
ALTER TABLE T_TECH_LS_2_COMMAND
  ADD CONSTRAINT FK_TLS2CMD_2_CMD
      FOREIGN KEY (COMMAND_ID)
      REFERENCES T_SERVICE_COMMANDS (ID);  


-- Auftrags-Leistungs Tabelle
CREATE TABLE T_AUFTRAG_2_TECH_LS (
       ID INTEGER(9) NOT NULL AUTO_INCREMENT
     , AUFTRAG_ID INTEGER(9) NOT NULL
     , TECH_LS_ID INTEGER(9) NOT NULL
     , QUANTITY INTEGER(10) NOT NULL
     , AKTIV_VON DATE NOT NULL 
     , AKTIV_BIS DATE
     , VERLAUF_ID_REAL INTEGER(9)
     , VERLAUF_ID_KUEND INTEGER(9)
     , TIMEST TIMESTAMP
     , PRIMARY KEY(ID)
)ENGINE=InnoDB;
CREATE INDEX IX_ATLS_AID ON T_AUFTRAG_2_TECH_LS (AUFTRAG_ID ASC);
CREATE INDEX IX_ATLS_TLID ON T_AUFTRAG_2_TECH_LS (TECH_LS_ID ASC);
ALTER TABLE T_AUFTRAG_2_TECH_LS
  ADD CONSTRAINT FK_ATLS_2_TECHLS
      FOREIGN KEY (TECH_LS_ID)
      REFERENCES T_TECH_LEISTUNG (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
ALTER TABLE T_AUFTRAG_2_TECH_LS
  ADD CONSTRAINT FK_ATLS_REAL_2_VERLAUF
      FOREIGN KEY (VERLAUF_ID_REAL)
      REFERENCES T_VERLAUF (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
ALTER TABLE T_AUFTRAG_2_TECH_LS
  ADD CONSTRAINT FK_ATLS_KUEND_2_VERLAUF
      FOREIGN KEY (VERLAUF_ID_KUEND)
      REFERENCES T_VERLAUF (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
ALTER TABLE T_AUFTRAG_2_TECH_LS
  ADD CONSTRAINT FK_ATLS_2_AUFTRAG
      FOREIGN KEY (AUFTRAG_ID)
      REFERENCES T_AUFTRAG (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
   
-- Aenderungen an Rufnummernleistungen
alter table T_LB_2_PRODUKT add column LEISTUNG__NO INTEGER(10) after LB_ID;
alter table T_LB_2_PRODUKT add column DESCRIPTION VARCHAR(100);
alter table T_LB_2_PRODUKT drop primary key;
alter table T_LEISTUNG_DN add column LEISTUNGSBUENDEL_ID INTEGER(9) after dn_no;
ALTER TABLE T_LEISTUNG_DN
  ADD CONSTRAINT FK_LEISTUNGDN_2_LEISTUNGSBUENDEL
      FOREIGN KEY (LEISTUNGSBUENDEL_ID)
      REFERENCES T_LEISTUNGSBUENDEL (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
alter table T_LEISTUNG_DN drop foreign key FK_LEISTUNGDN_2_LEISTUNG4DN;
alter table T_LEISTUNG_DN change column LEISTUNG_NO_DN LEISTUNG4DN_ID INTEGER(9) not null;
ALTER TABLE T_LEISTUNG_DN
  ADD CONSTRAINT FK_LEISTUNGDN_2_LEISTUNG4DN
      FOREIGN KEY (LEISTUNG4DN_ID)
      REFERENCES T_LEISTUNG_4_DN (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
alter table T_LEISTUNG_DN change column DN_NO DN_NO INTEGER(10) not null;

-- neue Tabelle zur Produkt-2-Endgeraete Konfiguration
CREATE TABLE T_PROD_2_EG (
       ID INTEGER(9) NOT NULL AUTO_INCREMENT
     , PROD_ID INTEGER(9)
     , EG_ID INTEGER(9)
     , IS_DEFAULT TINYINT(1)
     , PRIMARY KEY (ID)
)ENGINE=InnoDB;
ALTER TABLE T_PROD_2_EG
  ADD CONSTRAINT FK_PROD2EG_2_EG
      FOREIGN KEY (EG_ID)
      REFERENCES T_EG (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
ALTER TABLE T_PROD_2_EG
  ADD CONSTRAINT FK_PROD2EG_2_PRODUKT
      FOREIGN KEY (PROD_ID)
      REFERENCES T_PRODUKT (PROD_ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
ALTER TABLE T_PROD_2_EG
  ADD CONSTRAINT UQ_T_PROD_2_EG
      UNIQUE (PROD_ID, EG_ID);

ALTER TABLE T_EG add column CONFIGURABLE TINYINT(1);
ALTER TABLE T_EG drop column KLASSE;

ALTER TABLE T_EG_2_AUFTRAG add column AUFTRAG_ID INTEGER(9) after PRODAK_ORDER__NO;
ALTER TABLE T_EG_2_AUFTRAG
  ADD CONSTRAINT FK_EG2A_2_AUFTRAG
      FOREIGN KEY (AUFTRAG_ID)
      REFERENCES T_AUFTRAG (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
ALTER TABLE T_EG_2_AUFTRAG add column EG_HERKUNFT INTEGER(9);
ALTER TABLE T_EG_2_AUFTRAG
  ADD CONSTRAINT FK_EG2A_2_EGHERKUNFT
      FOREIGN KEY (EG_HERKUNFT)
      REFERENCES T_EG_HERKUNFT (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
alter table T_EG_2_AUFTRAG add column MONTAGEART INTEGER(9);
ALTER TABLE T_EG_2_AUFTRAG
  ADD CONSTRAINT FK_EG2A_2_MONTAGEART
      FOREIGN KEY (MONTAGEART)
      REFERENCES T_MONTAGEART (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;
ALTER TABLE T_EG_2_AUFTRAG
  ADD CONSTRAINT FK_EG2A_2_EG
      FOREIGN KEY (EG_ID)
      REFERENCES T_EG (ID)
   ON DELETE NO ACTION
   ON UPDATE CASCADE;

alter table t_eg change typ typ tinyint(4);
CREATE TABLE t_eg_config (
       ID INT(9) NOT NULL AUTO_INCREMENT
     , IP_ENDGERAET__ID INT(9) NOT NULL
     , EG2A_ID INT(9) NOT NULL
     , HERSTELLER VARCHAR(50)
     , MODELL VARCHAR(50)
     , SERIAL_NUMBER VARCHAR(50)
     , TYP INT(9)
     , NAT BIT
     , IP_LAN VARCHAR(15)
     , SUBNETMASK VARCHAR(15)
     , DHCP BIT
     , ANZAHL_IP TINYINT(2)
     , EG_COUNT_ACT TINYINT(4)
     , EG_COUNT_1YEAR TINYINT(4)
     , EG_COUNT_2YEARS TINYINT(4)
     , IP_VIRTUELL_WEB TINYINT(2)
     , BEMERKUNG TEXT
     , ANSP_ADMIN INT(9)
     , ANSP_TECHNICAL INT(9)
     , BEARBEITER VARCHAR(50)
     , EG_USER VARCHAR(25)
     , EG_PASSWORD VARCHAR(100)
     , GUELTIG_VON DATE NOT NULL DEFAULT '0000-00-00'
     , GUELTIG_BIS DATE NOT NULL DEFAULT '0000-00-00'
     , PRIMARY KEY (ID)
)ENGINE=InnoDB;
CREATE INDEX FK_IPEG_2_REF ON t_eg_config (TYP ASC);

-- Auftrag-IDs in T_VERLAUF sichern
alter table T_VERLAUF add column AUFTRAG_ID_TMP INTEGER(9);
update T_VERLAUF set AUFTRAG_ID_TMP=AUFTRAG_ID;


-- neues Produkt-Mapping
CREATE TABLE T_PRODUKT_MAPPING (
	   MAPPING_GROUP INTEGER(9) NOT NULL
     , EXT_PROD__NO INTEGER(10) NOT NULL
     , PROD_ID INTEGER(9) NOT NULL
     , MAPPING_PART_TYPE VARCHAR(10) NOT NULL
     , PRIMARY KEY (MAPPING_GROUP, EXT_PROD__NO, PROD_ID)
)ENGINE=InnoDB;

ALTER TABLE T_PRODUKT_MAPPING
  ADD CONSTRAINT FK_T_PRODUKT_MAPPING_1
      FOREIGN KEY (PROD_ID)
      REFERENCES T_PRODUKT (PROD_ID);





