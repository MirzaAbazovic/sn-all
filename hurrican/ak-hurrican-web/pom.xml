<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.mnet.hurrican</groupId>
    <artifactId>hurrican-web</artifactId>
    <name>${project.artifactId}</name>
    <packaging>jar</packaging>

    <parent>
        <groupId>de.mnet.hurrican</groupId>
        <artifactId>hurrican-parent</artifactId>
        <version>27.0.0-SNAPSHOT</version>
        <relativePath>../parent</relativePath>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <webResources>${basedir}/WebContent</webResources>
        <webInf>${webResources}/WEB-INF</webInf>
        <webXsdDirectory>${webInf}/xsd</webXsdDirectory>
        <warFile>${project.build.directory}/${project.artifactId}-${project.version}.war</warFile>
    </properties>

    <dependencies>
        <dependency>
            <groupId>de.mnet.hurrican</groupId>
            <artifactId>ak-hurrican-base</artifactId>
        </dependency>
        <dependency>
            <groupId>de.mnet.hurrican</groupId>
            <artifactId>ak-commons</artifactId>
            <!--
              Exclude xercesImpl and xalan to fix a ClassCastException: org.apache.xml.dtm.ref.DTMManagerDefault -> org.apache.xml.dtm.DTMManager
              http://stackoverflow.com/questions/3832414/classcastexception-in-casting-dtmmanagerdefault-into-dtmmanager-during-maven-jax/4808069
              This was necessary for the CI build with JDK 1.7u7.
              TODO: Check if it is still required when the CI host is updated to a newer JDK.
            -->
            <exclusions>
                <exclusion>
                    <artifactId>xercesImpl</artifactId>
                    <groupId>xerces</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>xalan</artifactId>
                    <groupId>xalan</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>de.mnet.hurrican</groupId>
            <artifactId>ak-commons</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>xercesImpl</artifactId>
                    <groupId>xerces</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>xalan</artifactId>
                    <groupId>xalan</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>de.mnet.hurrican</groupId>
            <artifactId>ak-authentication</artifactId>
        </dependency>
        <dependency>
            <groupId>de.mnet.hurrican</groupId>
            <artifactId>ak-hurrican-base</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.mnet.hurrican</groupId>
            <artifactId>hurrican-wita</artifactId>
        </dependency>
        <dependency>
            <groupId>de.mnet.hurrican</groupId>
            <artifactId>mnet-wita-wsdl</artifactId>
        </dependency>
        <dependency>
            <groupId>de.mnet.hurrican</groupId>
            <artifactId>hurrican-wita</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.mnet.hurrican</groupId>
            <artifactId>mnet-wita-format</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.mnet.hurrican</groupId>
            <artifactId>hurrican-spri</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xbean</groupId>
            <artifactId>xbean-spring</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.tibco.ems</groupId>
            <artifactId>tibjms</artifactId>
        </dependency>
        <dependency>
            <groupId>com.tibco.ems</groupId>
            <artifactId>tibrvjms</artifactId>
        </dependency>
        <dependency>
            <groupId>com.tibco.tra</groupId>
            <artifactId>tibcrypt</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-tools-wsdlto-databinding-jaxb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-tools-wsdlto-frontend-jaxws</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf.xjc-utils</groupId>
            <artifactId>cxf-xjc-runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-jms</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-tools-wsdlto-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.ws.xmlschema</groupId>
            <artifactId>xmlschema-core</artifactId>
        </dependency>

        <!-- Jetty als schnellere Alternative zum Tomcat da hier kein Publishing notwendig. -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- wird von org.apache.jasper.servlet.JspServlet gebraucht, welches produktiv von tomcat zur Verfuegung gestellt wird -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>juli</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>de.mnet.hurrican</groupId>
            <artifactId>test-data-generator</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- transient -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <scope>provided</scope>
            <!-- equivalent to dependency-level-exclude-tag in ivy.xml -->
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.jms</groupId>
            <artifactId>jms</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <hurrican_version>${hurrican.version}</hurrican_version>
                            <wita_version>${wita.version}</wita_version>
                            <wbci_version>${wbci.version}</wbci_version>
                            <branch>${BRANCH}</branch>
                        </manifestEntries>
                    </archive>
                    <webResources>
                        <resource>
                            <directory>${webResources}</directory>
                        </resource>
                    </webResources>
                </configuration>
                <executions>
                    <execution>
                        <!-- we need explicit binding because we have jar packaging -->
                        <goals>
                            <goal>war</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-a-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>make-a-test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${warFile}</file>
                                    <type>war</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <executions>
                    <execution>
                        <id>${project.artifactId}-cxf</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                        <configuration>
                            <sourceRoot>${project.build.directory}/generated-sources/cxf</sourceRoot>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/resources/xsd/customer/CustomerOrderService.wsdl</wsdl>
                                    <extraargs>
                                        <extraarg>-verbose</extraarg>
                                    </extraargs>
                                    <bindingFiles>
                                        <bindingFile>${basedir}/src/resources/xsd/customer/CustomerOrderServiceConfig.xjb</bindingFile>
                                    </bindingFiles>
                                </wsdlOption>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/resources/xsd/resource/ResourceReportingService.wsdl</wsdl>
                                    <extraargs>
                                        <extraarg>-verbose</extraarg>
                                    </extraargs>
                                </wsdlOption>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/resources/xsd/customer/MessageDeliveryService.wsdl</wsdl>
                                    <extraargs>
                                        <extraarg>-verbose</extraarg>
                                    </extraargs>
                                </wsdlOption>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/resources/xsd/resource/ResourceInventoryService.wsdl</wsdl>
                                    <extraargs>
                                        <extraarg>-verbose</extraarg>
                                    </extraargs>
                                    <bindingFiles>
                                        <bindingFile>${basedir}/src/resources/xsd/resource/ResourceInventoryService.xjb</bindingFile>
                                    </bindingFiles>
                                </wsdlOption>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/resources/xsd/portierung/PortierungService.wsdl</wsdl>
                                    <extraargs>
                                        <extraarg>-verbose</extraarg>
                                    </extraargs>
                                    <bindingFiles>
                                        <bindingFile>${basedir}/src/resources/xsd/portierung/PortierungService.xjb</bindingFile>
                                    </bindingFiles>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>${project.artifactId}-jaxb2</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>${webXsdDirectory}</schemaDirectory>
                            <bindingDirectory>${webXsdDirectory}</bindingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/LocationNotificationConsumerTest.*</exclude>
                        <exclude>**/CpsEndpointServiceTest.*</exclude>
                        <exclude>**/AvailabilityEndpointServiceTest.*</exclude>
                        <exclude>**/WholesaleWorkflowEndpointTest.*</exclude>
                        <exclude>**/AliveServiceTest.*</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dbMaintain</id>
            <activation>
                <property>
                    <!-- use -DskipDbMaintain in CMD LINE to skip DBMaintain -->
                    <name>!skipDbMaintain</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.dbmaintain</groupId>
                        <artifactId>dbmaintain-maven-plugin</artifactId>
                        <configuration>
                            <databases>
                                <database>
                                    <driverClassName>oracle.jdbc.driver.OracleDriver</driverClassName>
                                    <userName>${db.scheduler.user.schema}</userName>
                                    <password>${db.scheduler.user.password}</password>
                                    <url>${db.dbmaintain.hurrican.jdbc.url}</url>
                                    <schemaNames>${db.scheduler.user.schema}</schemaNames>
                                </database>
                            </databases>
                            <scriptLocations>${basedir}/src/dbmaintain</scriptLocations>
                            <allowOutOfSequenceExecutionOfPatches>${dbmaintain.allowOutOfSequenceExecutionOfPatches}
                            </allowOutOfSequenceExecutionOfPatches>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
