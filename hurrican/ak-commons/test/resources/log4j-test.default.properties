# logging configuration für Hurrican Tests
# Die Werte in diesem File können durch den üblichen Property-Mechanismus
# überschrieben werden

LoggerRootDir=.

# Root Logger Config
log4j.rootLogger=ERROR, console-test

log4j.appender.console-test=org.apache.log4j.ConsoleAppender
log4j.appender.console-test.layout=org.apache.log4j.PatternLayout
log4j.appender.console-test.layout.ConversionPattern=%d{ABSOLUTE} %-5p [%c{1}] %m%n
log4j.appender.console-test.Threshold=INFO

# Log Frameworks less verbose
log4j.logger.org.springframework=WARN
log4j.logger.org.hibernate=WARN
log4j.logger.org.apache.quartz=INFO

log4j.appender.file-test=org.apache.log4j.RollingFileAppender
log4j.appender.file-test.File=${LoggerRootDir}/log/ak-test.log
log4j.appender.file-test.maxFileSize=10MB
log4j.appender.file-test.maxBackupIndex=10
log4j.appender.file-test.layout=org.apache.log4j.PatternLayout
log4j.appender.file-test.layout.ConversionPattern=%d{ABSOLUTE} %-5p [%c] %m%n
log4j.appender.file-test.Threshold=TRACE

log4j.logger.org.springframework.ws.client.MessageTracing=DEBUG

# ************** Hibernate SQL logging ***************
# set to DEBUG to see SQL statements (same output as hibernate.show.sql=true yields on System.out)
log4j.logger.org.hibernate.SQL=INFO
# set to TRACE to see which parameters are bound to SQL prepared statements (very verbose!)
log4j.logger.org.hibernate.type=INFO


# *************** AugustaKom-Klassen *****************
log4j.logger.de.augustakom=DEBUG
log4j.logger.de.mnet=DEBUG
log4j.logger.net.sf.ehcache=ERROR
log4j.logger.de.augustakom.common.model.EntityBuilder=WARN
log4j.logger.org.supercsv=WARN