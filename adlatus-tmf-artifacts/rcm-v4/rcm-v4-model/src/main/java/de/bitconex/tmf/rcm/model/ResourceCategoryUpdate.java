/*
 * Resource Catalog Management
 * ## TMF API Reference: TMF634 - Resource Catalog Management  ### December 2019  Resource Catalog API is one of Catalog Management API Family. Resource Catalog API goal is to provide a catalog of resources.   ### Operations Resource Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * The version of the OpenAPI document: 4.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.bitconex.tmf.rcm.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.io.Serializable;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.List;

        /**
* The (resource) category resource is used to group resource candidates in logical containers. Categories can contain other categories. Skipped properties: id,href
*/
    @JsonPropertyOrder({
        ResourceCategoryUpdate.JSON_PROPERTY_DESCRIPTION,
        ResourceCategoryUpdate.JSON_PROPERTY_IS_ROOT,
        ResourceCategoryUpdate.JSON_PROPERTY_LAST_UPDATE,
        ResourceCategoryUpdate.JSON_PROPERTY_LIFECYCLE_STATUS,
        ResourceCategoryUpdate.JSON_PROPERTY_NAME,
        ResourceCategoryUpdate.JSON_PROPERTY_PARENT_ID,
        ResourceCategoryUpdate.JSON_PROPERTY_VERSION,
        ResourceCategoryUpdate.JSON_PROPERTY_CATEGORY,
        ResourceCategoryUpdate.JSON_PROPERTY_RELATED_PARTY,
        ResourceCategoryUpdate.JSON_PROPERTY_RESOURCE_CANDIDATE,
        ResourceCategoryUpdate.JSON_PROPERTY_VALID_FOR,
        ResourceCategoryUpdate.JSON_PROPERTY_AT_BASE_TYPE,
        ResourceCategoryUpdate.JSON_PROPERTY_AT_SCHEMA_LOCATION,
        ResourceCategoryUpdate.JSON_PROPERTY_AT_TYPE
    })
            @JsonTypeName("ResourceCategory_Update")
@lombok.Data
@lombok.Builder
@lombok.AllArgsConstructor
@lombok.NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)

public class ResourceCategoryUpdate implements Serializable {
        public static final String JSON_PROPERTY_DESCRIPTION = "description";
            private String description;

        public static final String JSON_PROPERTY_IS_ROOT = "isRoot";
            private Boolean isRoot;

        public static final String JSON_PROPERTY_LAST_UPDATE = "lastUpdate";
            private OffsetDateTime lastUpdate;

        public static final String JSON_PROPERTY_LIFECYCLE_STATUS = "lifecycleStatus";
            private String lifecycleStatus;

        public static final String JSON_PROPERTY_NAME = "name";
            private String name;

        public static final String JSON_PROPERTY_PARENT_ID = "parentId";
            private String parentId;

        public static final String JSON_PROPERTY_VERSION = "version";
            private String version;

        public static final String JSON_PROPERTY_CATEGORY = "category";
            private List<ResourceCategoryRef> category;

        public static final String JSON_PROPERTY_RELATED_PARTY = "relatedParty";
            private List<RelatedParty> relatedParty;

        public static final String JSON_PROPERTY_RESOURCE_CANDIDATE = "resourceCandidate";
            private List<ResourceCandidateRef> resourceCandidate;

        public static final String JSON_PROPERTY_VALID_FOR = "validFor";
            private TimePeriod validFor;

        public static final String JSON_PROPERTY_AT_BASE_TYPE = "@baseType";
            private String atBaseType;

        public static final String JSON_PROPERTY_AT_SCHEMA_LOCATION = "@schemaLocation";
            private URI atSchemaLocation;

        public static final String JSON_PROPERTY_AT_TYPE = "@type";
            private String atType;



}

