/*
 * Resource Catalog Management
 * ## TMF API Reference: TMF634 - Resource Catalog Management  ### December 2019  Resource Catalog API is one of Catalog Management API Family. Resource Catalog API goal is to provide a catalog of resources.   ### Operations Resource Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * The version of the OpenAPI document: 4.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.bitconex.tmf.rcm.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.io.Serializable;
import java.net.URI;
import java.util.List;

        /**
* This class defines the characteristic features of a resource specification. Every ResourceSpecification has a variety of important attributes, methods, constraints, and relationships, which distinguish a resource specification from other resource specifications.
*/
    @JsonPropertyOrder({
        ResourceSpecificationCharacteristic.JSON_PROPERTY_ID,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_CONFIGURABLE,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_DESCRIPTION,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_EXTENSIBLE,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_IS_UNIQUE,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_MAX_CARDINALITY,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_MIN_CARDINALITY,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_NAME,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_REGEX,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_VALUE_TYPE,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_RESOURCE_SPEC_CHAR_RELATIONSHIP,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_RESOURCE_SPEC_CHARACTERISTIC_VALUE,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_VALID_FOR,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_AT_BASE_TYPE,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_AT_SCHEMA_LOCATION,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_AT_TYPE,
        ResourceSpecificationCharacteristic.JSON_PROPERTY_AT_VALUE_SCHEMA_LOCATION
    })
@lombok.Data
@lombok.Builder
@lombok.AllArgsConstructor
@lombok.NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)

public class ResourceSpecificationCharacteristic implements Serializable {
        public static final String JSON_PROPERTY_ID = "id";
            private String id;

        public static final String JSON_PROPERTY_CONFIGURABLE = "configurable";
            private Boolean configurable;

        public static final String JSON_PROPERTY_DESCRIPTION = "description";
            private String description;

        public static final String JSON_PROPERTY_EXTENSIBLE = "extensible";
            private Boolean extensible;

        public static final String JSON_PROPERTY_IS_UNIQUE = "isUnique";
            private Boolean isUnique;

        public static final String JSON_PROPERTY_MAX_CARDINALITY = "maxCardinality";
            private Integer maxCardinality;

        public static final String JSON_PROPERTY_MIN_CARDINALITY = "minCardinality";
            private Integer minCardinality;

        public static final String JSON_PROPERTY_NAME = "name";
            private String name;

        public static final String JSON_PROPERTY_REGEX = "regex";
            private String regex;

        public static final String JSON_PROPERTY_VALUE_TYPE = "valueType";
            private String valueType;

        public static final String JSON_PROPERTY_RESOURCE_SPEC_CHAR_RELATIONSHIP = "resourceSpecCharRelationship";
            private List<ResourceSpecificationCharacteristicRelationship> resourceSpecCharRelationship;

        public static final String JSON_PROPERTY_RESOURCE_SPEC_CHARACTERISTIC_VALUE = "resourceSpecCharacteristicValue";
            private List<CharacteristicValueSpecification> resourceSpecCharacteristicValue;

        public static final String JSON_PROPERTY_VALID_FOR = "validFor";
            private TimePeriod validFor;

        public static final String JSON_PROPERTY_AT_BASE_TYPE = "@baseType";
            private String atBaseType;

        public static final String JSON_PROPERTY_AT_SCHEMA_LOCATION = "@schemaLocation";
            private URI atSchemaLocation;

        public static final String JSON_PROPERTY_AT_TYPE = "@type";
            private String atType;

        public static final String JSON_PROPERTY_AT_VALUE_SCHEMA_LOCATION = "@valueSchemaLocation";
            private String atValueSchemaLocation;



}

