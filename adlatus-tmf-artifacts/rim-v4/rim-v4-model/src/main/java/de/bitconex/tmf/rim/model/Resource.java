/*
 * API Resource Inventory Management
 * ## TMF API Reference: TMF639 - Resource Inventory   ### Release : 19.5 - December 2019  Resource Inventory  API goal is to provide the ability to manage Resources.  ### Operations Resource Inventory API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity (for administration purposes) - Manage notification of events
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.bitconex.tmf.rim.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.io.Serializable;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.List;

        /**
* Resource is an abstract entity that describes the common set of attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the inventory.
*/
    @JsonPropertyOrder({
        Resource.JSON_PROPERTY_ID,
        Resource.JSON_PROPERTY_HREF,
        Resource.JSON_PROPERTY_CATEGORY,
        Resource.JSON_PROPERTY_DESCRIPTION,
        Resource.JSON_PROPERTY_END_OPERATING_DATE,
        Resource.JSON_PROPERTY_NAME,
        Resource.JSON_PROPERTY_RESOURCE_VERSION,
        Resource.JSON_PROPERTY_START_OPERATING_DATE,
        Resource.JSON_PROPERTY_ACTIVATION_FEATURE,
        Resource.JSON_PROPERTY_ADMINISTRATIVE_STATE,
        Resource.JSON_PROPERTY_ATTACHMENT,
        Resource.JSON_PROPERTY_NOTE,
        Resource.JSON_PROPERTY_OPERATIONAL_STATE,
        Resource.JSON_PROPERTY_PLACE,
        Resource.JSON_PROPERTY_RELATED_PARTY,
        Resource.JSON_PROPERTY_RESOURCE_CHARACTERISTIC,
        Resource.JSON_PROPERTY_RESOURCE_RELATIONSHIP,
        Resource.JSON_PROPERTY_RESOURCE_SPECIFICATION,
        Resource.JSON_PROPERTY_RESOURCE_STATUS,
        Resource.JSON_PROPERTY_USAGE_STATE,
        Resource.JSON_PROPERTY_AT_BASE_TYPE,
        Resource.JSON_PROPERTY_AT_SCHEMA_LOCATION,
        Resource.JSON_PROPERTY_AT_TYPE
    })
@lombok.Data
@lombok.Builder
@lombok.AllArgsConstructor
@lombok.NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)

public class Resource implements Serializable {
        public static final String JSON_PROPERTY_ID = "id";
            private String id;

        public static final String JSON_PROPERTY_HREF = "href";
            private String href;

        public static final String JSON_PROPERTY_CATEGORY = "category";
            private String category;

        public static final String JSON_PROPERTY_DESCRIPTION = "description";
            private String description;

        public static final String JSON_PROPERTY_END_OPERATING_DATE = "endOperatingDate";
            private OffsetDateTime endOperatingDate;

        public static final String JSON_PROPERTY_NAME = "name";
            private String name;

        public static final String JSON_PROPERTY_RESOURCE_VERSION = "resourceVersion";
            private String resourceVersion;

        public static final String JSON_PROPERTY_START_OPERATING_DATE = "startOperatingDate";
            private OffsetDateTime startOperatingDate;

        public static final String JSON_PROPERTY_ACTIVATION_FEATURE = "activationFeature";
            private List<Feature> activationFeature;

        public static final String JSON_PROPERTY_ADMINISTRATIVE_STATE = "administrativeState";
            private ResourceAdministrativeStateType administrativeState;

        public static final String JSON_PROPERTY_ATTACHMENT = "attachment";
            private List<AttachmentRefOrValue> attachment;

        public static final String JSON_PROPERTY_NOTE = "note";
            private List<Note> note;

        public static final String JSON_PROPERTY_OPERATIONAL_STATE = "operationalState";
            private ResourceOperationalStateType operationalState;

        public static final String JSON_PROPERTY_PLACE = "place";
            private RelatedPlaceRefOrValue place;

        public static final String JSON_PROPERTY_RELATED_PARTY = "relatedParty";
            private List<RelatedParty> relatedParty;

        public static final String JSON_PROPERTY_RESOURCE_CHARACTERISTIC = "resourceCharacteristic";
            private List<Characteristic> resourceCharacteristic;

        public static final String JSON_PROPERTY_RESOURCE_RELATIONSHIP = "resourceRelationship";
            private List<ResourceRelationship> resourceRelationship;

        public static final String JSON_PROPERTY_RESOURCE_SPECIFICATION = "resourceSpecification";
            private ResourceSpecificationRef resourceSpecification;

        public static final String JSON_PROPERTY_RESOURCE_STATUS = "resourceStatus";
            private ResourceStatusType resourceStatus;

        public static final String JSON_PROPERTY_USAGE_STATE = "usageState";
            private ResourceUsageStateType usageState;

        public static final String JSON_PROPERTY_AT_BASE_TYPE = "@baseType";
            private String atBaseType;

        public static final String JSON_PROPERTY_AT_SCHEMA_LOCATION = "@schemaLocation";
            private URI atSchemaLocation;

        public static final String JSON_PROPERTY_AT_TYPE = "@type";
            private String atType;



}

