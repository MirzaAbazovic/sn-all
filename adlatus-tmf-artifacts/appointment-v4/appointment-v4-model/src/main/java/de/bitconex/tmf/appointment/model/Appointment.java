/*
 * Appointment
 * ## TMF API Reference : TMF 646 - Appointment  An Appointment is an arrangement to do something or meet someone at a particular time and place. It is previously made during an interaction or may be necessary to solve a customer problem or to deliver a product order item. The appointment API goal is to manage an appointment with all the necessary characteristics. First, the API consists in searching free time slots based on given parameters.
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.bitconex.tmf.appointment.model;

import com.fasterxml.jackson.annotation.JsonInclude;
    import com.fasterxml.jackson.annotation.JsonProperty;
    import com.fasterxml.jackson.annotation.JsonCreator;
    import com.fasterxml.jackson.annotation.JsonTypeName;
    import com.fasterxml.jackson.annotation.JsonValue;

import java.net.URI;
    import java.time.OffsetDateTime;
import java.util.List;
    import com.fasterxml.jackson.annotation.*;
import java.io.Serializable;

        /**
* An Appointment is an arrangement to do something or meet someone at a particular time, at a place (for face to face appointment) or in a contact medium (for phone appointment).
*/
    @JsonPropertyOrder({
        Appointment.JSON_PROPERTY_ID,
        Appointment.JSON_PROPERTY_HREF,
        Appointment.JSON_PROPERTY_CATEGORY,
        Appointment.JSON_PROPERTY_CREATION_DATE,
        Appointment.JSON_PROPERTY_DESCRIPTION,
        Appointment.JSON_PROPERTY_EXTERNAL_ID,
        Appointment.JSON_PROPERTY_LAST_UPDATE,
        Appointment.JSON_PROPERTY_ATTACHMENT,
        Appointment.JSON_PROPERTY_CALENDAR_EVENT,
        Appointment.JSON_PROPERTY_CONTACT_MEDIUM,
        Appointment.JSON_PROPERTY_NOTE,
        Appointment.JSON_PROPERTY_RELATED_ENTITY,
        Appointment.JSON_PROPERTY_RELATED_PARTY,
        Appointment.JSON_PROPERTY_RELATED_PLACE,
        Appointment.JSON_PROPERTY_STATUS,
        Appointment.JSON_PROPERTY_VALID_FOR,
        Appointment.JSON_PROPERTY_AT_BASE_TYPE,
        Appointment.JSON_PROPERTY_AT_SCHEMA_LOCATION,
        Appointment.JSON_PROPERTY_AT_TYPE
    })
@lombok.Data
@lombok.Builder
@lombok.AllArgsConstructor
@lombok.NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)

public class Appointment implements Serializable {
        public static final String JSON_PROPERTY_ID = "id";
            private String id;

        public static final String JSON_PROPERTY_HREF = "href";
            private String href;

        public static final String JSON_PROPERTY_CATEGORY = "category";
            private String category;

        public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
            private OffsetDateTime creationDate;

        public static final String JSON_PROPERTY_DESCRIPTION = "description";
            private String description;

        public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
            private String externalId;

        public static final String JSON_PROPERTY_LAST_UPDATE = "lastUpdate";
            private OffsetDateTime lastUpdate;

        public static final String JSON_PROPERTY_ATTACHMENT = "attachment";
            private List<AttachmentRefOrValue> attachment;

        public static final String JSON_PROPERTY_CALENDAR_EVENT = "calendarEvent";
            private CalendarEventRef calendarEvent;

        public static final String JSON_PROPERTY_CONTACT_MEDIUM = "contactMedium";
            private List<ContactMedium> contactMedium;

        public static final String JSON_PROPERTY_NOTE = "note";
            private List<Note> note;

        public static final String JSON_PROPERTY_RELATED_ENTITY = "relatedEntity";
            private List<RelatedEntity> relatedEntity;

        public static final String JSON_PROPERTY_RELATED_PARTY = "relatedParty";
            private List<RelatedParty> relatedParty;

        public static final String JSON_PROPERTY_RELATED_PLACE = "relatedPlace";
            private RelatedPlaceRefOrValue relatedPlace;

        public static final String JSON_PROPERTY_STATUS = "status";
            private AppointmentStateType status;

        public static final String JSON_PROPERTY_VALID_FOR = "validFor";
            private TimePeriod validFor;

        public static final String JSON_PROPERTY_AT_BASE_TYPE = "@baseType";
            private String atBaseType;

        public static final String JSON_PROPERTY_AT_SCHEMA_LOCATION = "@schemaLocation";
            private URI atSchemaLocation;

        public static final String JSON_PROPERTY_AT_TYPE = "@type";
            private String atType;



}

